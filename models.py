# generated by datamodel-codegen:
#   filename:  erot.scheme.json
#   timestamp: 2021-12-07T11:21:46+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field, constr


class ErotFull(BaseModel):
    id: Optional[constr(regex=r'(?i)^№ п\п$')] = Field(None, description='№ п/п')
    req_id: constr(regex=r'(?i)^id требования$') = Field(
        ..., description='ID требования'
    )
    req_content: constr(regex=r'(?i)^содержание обязательного требования') = Field(
        ..., description='Содержание обязательного требования'
    )
    req_publication_status: constr(regex=r'ID требования') = Field(
        ..., description='Статус публикации'
    )
    req_publication_date: Optional[constr(regex=r'ID требования')] = Field(
        None, description='ID требования'
    )
    req_work_status: Optional[constr(regex=r'ID требования')] = Field(
        None, description='ID требования'
    )
    req_regulation_level: Optional[constr(regex=r'ID требования')] = Field(
        None, description='ID требования'
    )
